version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: ../deploy/frontend/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://backend:8000
    command: npm run dev -- --host 0.0.0.0

  backend:
    build:
      context: ./backend
      dockerfile: ../deploy/backend/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - postgres
    environment:
      - LLM_PROVIDER=openai
      - LLM_MODEL=gpt-4o
      - LANGFUSE_SECRET_KEY=sk-lf-3868285f-e279-4a74-bcda-da8f6e71adf1
      - LANGFUSE_PUBLIC_KEY=pk-lf-ebca7cac-c19b-448d-b0ed-9a80af4e0762
      - LANGFUSE_HOST=https://us.cloud.langfuse.com

      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}

      - KAKAO_API_REST_KEY=${KAKAO_API_REST_KEY}
      - KAKAO_API_JS_KEY=${KAKAO_API_JS_KEY}
      - KAKAO_API_ADMIN_KEY=${KAKAO_API_ADMIN_KEY}
      - KAKAO_REDIRECT_URI=${KAKAO_REDIRECT_URI}
      - KAKAO_CLIENT_SECRET=${KAKAO_CLIENT_SECRET}

      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=travelfinder

      - REDIS_HOST=redis://redis:6379
    volumes:
      - ./backend:/app

  redis:
    build:
      context: ./deploy/redis
      dockerfile: Dockerfile
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  postgres:
    build:
      context: ./deploy/postgres
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./deploy/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=travelfinder
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password

volumes:
  redis-data:
  postgres-data: